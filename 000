
----

By default, students love to be teached to code via tutorials.
But it's not a real project, with a real challenges, deadlines, team members, etc.

And before my team members have a good hire rate. So i'm proud to help them I think it's also cleaning my karma --> so benefits are mutual.
I was also having a lot of fun, because i'm coding it too, so we interact with team members frequently at Github


---

Where to learn code for free.

Short answer is everywhere: you just need to know "what exactly to google". [My story about pagination]
At my case --> when I got first testing project, for applying to my first coding job -- i don't know about term - pagination.
So it was hard to google. I know how it looks, i understand the logic. but i reinvent the wheel in order to do it. and i failed my assement, because experience developers was confused why i did it in my way.

FreebootCamp. Sad story, that Medium pushing articles under paywall. And soon a lot of articles(new articles) will be hidden for free readers.
I hope Quincy will do something about it, because I receiving a Medium articles(digest) & I get only paywallable links, so free coding movement will have some problems.

Ok, back to story.
Stackoverflow for asking questions and searching
Google for searching
Youtube for coding tutorials
CSS tricks, Mozilla MDN, google developers (But i dont hear about it frequently)

Paid
Lynda/linkedin
Threehouse
Udemy/Udacity



aT medium - there a lot of small publications(read magazines, inside Medium that also have coding tutorials)

----


In this article, I want to explain what startup founder(MVP stage) you shouldn't do. I can tell you how few years ago I start to build a recipe server, How I was confused and conflicted.
I was thinking that I so far away from "good", "ideal" project "with quality" and giving good "value" for our users. I understand that it'is hard to create a lot of things in order to make it "perfect"
Between this article and that situation it was 18-20 months.

I learned a new technologies, read a lot of information about how to launch on PH. [article]
Read some of my prev. articles.
I form a team of interns and collect huge amount of data. But if I launch my API server 18 months before _> i can be more happy.
But fear holding you back. Some details I explain at this article[article]
So half year ago i can launch my project too.
So please take my advice: trust in yourself, listen other people, but have a shield from opinions that can harm you.
And nobody cares what your first version will be -> just dont give up.

Another point is support. There is a bunch of good friendly communities, that ready to help and reply to your question. It can be a stupid question, but important for you.
Don't be afraid to ask it. You can also benefit from asking it publicly... Good question is 50% of success.
[that hot gif]

And like puzzle pieces, my project start to form.
My wishes, my knowledge of popular open-source projects start to form a picture, that I only imagine before.
The first version of my API was ready more recipes. that 1.5 years ago.

I got stuck at that time and switched to another project. I had halfly done frontend pages on React, that can be connected, polished and ready to go.

After year(year lately) API still works, nothing is broken. Why not to publish it, right?
It is also looks rich. Thanks to Loopback, All POST/PUT/GET works, have a description and playground. It's generated by swagger.
Lately I can add an Image upload and Auth, via FB. It can be added quickly. I set it up on my another project.

maybe I can enable an Advanced Search on backend side. I start to work on it too. And have a testing set of recipes, that will help to test it.
But it will be done only when I'll see interest from our future users.

An Impotant part of this project --> that this project is an open-sourced. We didn't hide anything(at least at this point)

We trying to breakdown big and complex for us tasks into a small parts, test them in different cases. Our goal is to form a community, that will be able to use our modules or help us to build them on their projects.

We our code are not ideal right now.
We have a lot of plans and taks, that we describe. But at this moment we want to show, what was done completed right now.

[PH RAPI]

Whole January I was preparing to launch. I start to realize, that each time I decide to move away a lot of things.
I don't want to launch it in ideal state. Not right now. It is hard/unreal -> let's face it.


I just take a complex task, make it less complicated, by making a deal with myself and it save my time.
Maybe in future, after, I will be unhappy with this decision. But you never know it, right?

Why I build an API?
Because you need to start with something another thing I have knowledge how to do it. Or, we can rephrase it -> I know how to not do it bad. Because I faced similar problems before.
I was thinking about buidling an app and when i understand that i need to connect it auth.
backend and backend need contend and i decided to build an API

----
---

You have a voice. And you have a place, where you can share your opinion. It's hackernoon. If you have any doubts -> I can tell you -> if I have an ability to do it -> then you also can. I'm not the best writer here, not/nor the smarter or famous, but because of HN team -> I have an ability to tell my stories
Pleaseeeee, don't hesitate and do it.

---
Статья о том, как я вообще хуею 2 года от мысли о маркетологах, как отдельных сотрудниках. Перечислить мои регалии, мой опыт с неопытными. рассказать о sales, сказать, что если после этой статьи, опубликоваться на ХН и ненайду никого --- я откажусь от идеи найти маркетолога полностью.
Я буду лучше тратить будущие деньги на видео, статьи, программистов.

Потому что мне надоело, что программисты очень часто содержат людей, которые не готовы расти и развиваться.изменяться(дадада конечно есть исключения. я о avg говорю).

Я достиг из пункта А в Б не потому что я умный, а потому что я пластичен и делаю чтото постоянно. еще я ленив. поэтому вот так.

лучше и дешевле тратить деньги на tools, чем на людей, которые скоро будут .... recruiters
, sales, "failing managers"

---
Когда моя пред компания зафейлила --- я смотрел отчеты, фин информацию, чтобы найти причину. И я считал, что вместо того, чтобы делать проф ролики, которые будут работать 24/7 и каждый день без больничных --- я пытался учить и учится, потом я понял, что за те же деньги, получилось бы если не лучше, то как минимум не хуже.
И я сам могу делать это, хотя сейчас есть куча способов для автоматизации.

---

For a lot of cases interns inside of companies working on something that is not very important(usually). And it company decide, that code can be easily go to trash.

But for me, each code change is precious. Because it helps me to move my project forward. For sure, I can do it better and quickly myself. But if'll code it --> I wouldn't have a lot of time to network or chat with mentors, partners, all of this things is in process,
so i don't have completed "something to show". But if this will be interested they can at linkedin reach me and I'll reply {LI}


----
Basic steps Are
1) use Github for all communications, related to task. don';t be afraid to ask questions. if you'll be overwhelming people tell you that.

2) forking a repository. don't forget that your leader can be busy and reply slow this shouldn't be an issue/excuse, where you can chill and wait for help. nothing bad at all ---> questions are good and reasonable.

1) yes, please fork a repositoy and code at local machine.
2) shortway: remove/comment methods from this lines. try to run tests and see what is going on.

====
====
====

React intern example with layout switch
Самое обидное есть то, что лично для меня, рассуждать с этьими задачами с интернами об этих coding principles --> это по сути трата времени, ведь мне выгоднее чтобы мелкие таски делались быстро. Но при этом я понимаю, что когда dev ломает голову над такой или подобной проблемой ---> именно в это время происходит рост как девелопера.
Я задумался, как научить видеть такие неточности.
Ведь это и есть скилл и он не измеряется знанием синтаксиса или пониманием логики. Это просто опыт, как брезгливость кошки, которая нехочет трогать воду лапой.

---
Школа

Увидел demand
думал
составил план
собрал дополнительные данные
упростил процесс
включил content-marketing
включил CRM/sales shit
publish on PH, HN, в других хуерняхах
скирины как регистрирую новую компанию в AL, ввожу данные. создаю jobs...
показываю статьи свои там ...

соединяю с основным профилем, добавляю в Linkedin/ замеряю результаты через 5-10 дней, пишу о них, и как я буду что изменять.

Школа: т.к. много стандартной работы(labour) закончится, будет много взрослых людей, которые будут учится кодить, и т.к. он(взрослый) привык работать - им будет нужен более четким.
вместо обучения сложного

Есть DevSkill го к нам
Есть желание поучится Sales - продвигать товар
Marketing -> Let's do it in hardware way
---
Нужен менеджер, помощник и т.д.
---
Act right now -> because if we'll have big demand and simple task will be fixed -> we'll raise a bar in order to improve quality of beginner interns. Right now, entering is easy, later - i don't know - because demand is high.
====





Nodejs Example article
Updates in a small modules(I need a name for it)
1) I requested changes few times, small things only
Usually it's about creating a few functions, export them from file, write a few tests, etc.
2) then I want to hear his suggestion, about how to improve our code. It's cool and I want to promote "thinking" of our interns, so each one became an engineer that can raise questions and his feedback are important
3) we're cleaning up our code. It's a static module with json files, that will later became imported to db. So it's like a db emulator.
Then we'll jump into expressjs server and connect our module(install there). Server is a fake-api right now -> we don't have a db and we dont need it. Only routes.
Then we will increase number of custom nodejs skills and works with file system -> we'll generate some json arryas and save them into few new files.

then we'll remove few static files, at new static food module
then we'll think about moving everything to public
what intern will learn
* Git
* constants
* have to include files
* recode an old code
* generate improvements
* moving similar functions to utils.js
simple tests, how to run and relay on tests. how to work with team members.





---
Problems in my process.
Мне бы хотелось делать какой то общий план для интернов(аля чеклист), чтобы они понимали не только какой у них сейчас есть таск, но и какой будет следующий и т.д.
Я думаю что это можно сделать внутри Github issues, но для этого нужно желание и время.
Тогда каждый из нас может видеть, какой прогресс будет и т.д.
Еще мне понравился подход одного менеджера. Он руководил несколькими проектами, которые тонули и он каждый день или раз в три дня слал
follow-up emails, в которых он уточнял, какие задачи сейчас нужно делать. И мне, его разработчику на тот момент, было очень комфортно работать под его контролем -- я всегда знал и видел, чем мне нужно сейчас заниматься.
И не надо мне было особо думать, лазить в тасках в JIRA, etc. Я просто должен был делать код для этих задач в течении дня.
Тоесть он посути делал все, чтобы уменьшить время, которое я трачу(и это увеличивает стоимость умирающего проекта)
и еще он пытался понять, как именно мне ужобно чтото делать. тоесть он нашел некоторый баланс.
Он кстати козел, должен мне остался $300 - ""забыв"" заплатить мне и моей команде, ну да и черт с ним.
Он русский, переехашвий в Америку - поэтому я вообще не удивлен.

* Нужно больше времени уделять настройке Agile внутри моих проектов, и учить пользоваться этим девов.
* Часть девов, кроме дев скиллс имеют опыт организационнной работе в университетах, кампусах, коммьюнитиз и т.д.
Хотелось бы давать им больше свободы, для того, чтобы они могли брать управление на себя и двигать проект самостоятельно.
* нужно вычленять тех девов, которые почти решили бросить работу с нами. И выяснить причину, почему они об этом задумываются...
В большинстве случает люди или заняты или мой подход им не нравится. Это может быть банальная усталость, нехватка времени, personal situations, etc...

Интересный вопрос в быстром определении глубины их скиллов потому что, когда я читаю
I know JS, HTML, CSS, Java, .Net, Python.
ПОсути нихрена ты не знаешь дружок!

Я понимаю, что их знания чаще всего ограниченны учебной программы.
Как сделать процесс onboarding еще проще?
Писать больше статей? Рассказать логику работы GitHub, Github issues, Github labels, github milestones?
Рассказать о том, как взаимодействовать с таском, pull request?
---
Только небольшой процент интернов доживают до отметки работы со мной over 3 months. Первое может быть связанно с тем что они actually actively seeking a salary from work, not experience
second is about laziness, third is about complexity of tasks, boredom tasks that they cannot solve.

---
Какой должен быть размер проекта. Какое должно быть описание, чтобы они могли легко начать? Размер описания, достаточно ли хранить все в одном Readme?

Просто я несколько раз делал сложные описания, длинные Readme в своих проектах, но я не вижу, чтобы это давало радикальные результаты, или я бы ощутил на себе реальное увеличение прироста прогресса от студентов.
Как менеджер, мне наверное нужно развивать мои skills по управлению моей remote team. Может начать делать calls, делать-записывать videos с обхясненниями tasks.

Еще мне не нравится, что прогресс ощутимый ощущается только на тех проектах/модулях, на которых у меня есть приоритет и сильный фокус.
Т.е. если я считаю что проект не сильно важен - получатеся его
никто и не делает, что немного странно и глупо. Ведь если сейчас этот модуль может быть не важен, а через 2-3 месяца он мог быть уже готов и использоваться.
---




Надо развивать и мой проект contributors в котором развивать привычку добавлять всех и ссылки на их проекты, тогда будет удобно.


---
What I don't like in my work with interns.
I'm working on my mistakes here.
1) I think I limiting them frequently. Especially at the begining. I know that students can be sitracted. And I'm forcing them to work on some tasks.
And I didn't connect them together in our Slack channel. It's a bad for team building and getting "feeling" that you're part of a big team.

2) Usually I'm assigning tasks, that don't give an ability for creativity. It's always a simple, solid task.
I don't spend as much as I should times in my projects at GitHub. It's because I'm coding frequently myself, and busy or lazy. We don't setup a proper git-flow.
I give a bad leadership here.

I need to apply an Issue templates and always follow that rules...

I give a bad role-model with bad task description, bad commit messages, empty descriptions at pull requests. I always don't have time for it.
4) I can spend more time at the begining and do a better analysis of their skills at the begining.
5) I can spend more time on explaining tasks. Sometimes I do this on purpose. In order (I want sometimes to provoke a discussion)
and member will ask what exactly is not clear at this task. Sometimes I'm just lazy to put more time on it.

I should increase lifespan with each team members. it will give me more abilities to teach then working with us, then I'll be able to focus to extend their skillset, based on their wishes.
Many students give up, when they find something more interesting(Ex.: we started to work on graphQL server with one girl)
When complex tasks arrived and she was not able quickly solve them -> she stuck and she switched to help project, that makes a memes database.
And I understand her. I also love memes. [put some memes]!

I think about extending/ adding complexity of interview of job-seekers. My assumption is: if interview will be more serious, and I will be more "bossy" and i will ask 10 complex questions during the interview.

And make them sweat - and hard to answer quickly --- people will be more paying attention(ценить) and be grateful for being part of this programm.
And I always for love to share big dump of data, before anyone will join, but I don't want that they will read only. My main goal/task - code practice, nor reading.
---
if you don't want to join us, but your friends may want it. You can pass that links to them or star us on Github.

===

And experience is different. always different. When you working with experienced developer is one thing. When you building an open-sourced library -> a lot of things should be done differently.
Same for working as service provider(code websites for money) or building your own product.

Just imagine this: Instead of building each screen of page or view in app -> people can grab an use default modules
That modules aresimple< understandable and tested independently.
They also low level modules -> install and start to use. I think it also good time to build them -> right now OSS community growing fast and Javascript develoerps 97% use OSS modules at their work.
This modules can be ugly, or not finished, but it still can be a good starting point for people, for food projects.
From tech point a lot of websites with recipes content are similar, so why to build it again and again.



---

gallon.json -> add variable ```"name":"gallon"``` to object,
so later we can easily connect them.
---


https://www.linkedin.com/company/olio-the-food-sharing-revolution/
https://www.linkedin.com/feed/update/urn:li:activity:6532675269231161344/







https://angel.co/company/groceristar/jobs/289455-remote-javascript-software-developer-internship
https://angel.co/company/groceristar/jobs/296859-remote-executive-assistant-internship-non-paid
https://angel.co/company/groceristar/jobs/363028-marketing-growth-hacking-intern-remote-non-paid
https://angel.co/company/groceristar/jobs/323796-ai-ml-software-developer-intern-non-paid
https://angel.co/company/groceristar
https://github.com/ChickenKyiv/awesome-food-tech-projects

------------
https://www.youtube.com/watch?v=mxCfygY1dk8
https://www.youtube.com/watch?v=2-4dS5J4N3k
https://www.youtube.com/watch?v=Boj9eD0Wug8&fbclid=IwAR22NuC-FNBpYRRRzTC5W0brx6UqWKjJ4Z6r_ke_vsTxd1V0Aw7Njl2djZM
https://www.youtube.com/watch?v=Ucp0TTmvqOE


--------
remote work: https://twitter.com/ThePracticalDev/status/1085004901191692288
